name: Nightly Build

on:
  push:
    branches: [main]

jobs:
  deploy:
    name: Deploy to QA
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source Repo
        uses: actions/checkout@v4
        with:
          repository: ccrawford4/devops-midterm-source
          fetch-tags: true
    
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push Docker images to Amazon ECR
        run: |
          for service in frontend backend; do
            cd $service
            docker build -t $service .
            docker tag $service ${{ secrets.ECR_REPOSITORY_URI }}:$service
            docker push ${{ secrets.ECR_REPOSITORY_URI }}:$service
            cd ..
          done

      - name: Deploy to QA
        env: 
          PRIVATE_KEY: ${{ secrets.EC2_PEM }}
          HOSTNAME: ${{ secrets.EC2_HOST }}
          USER_NAME: ${{ secrets.EC2_USER }}
        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME} << 'EOF'
            docker ps -q | grep . && docker rm -f $(docker ps -q)
            docker pull ${{ secrets.ECR_REPOSITORY_URI }}:frontend
            docker run -d ${{ secrets.ECR_REPOSITORY_URI }}:frontend
            docker pull ${{ secrets.ECR_REPOSITORY_URI }}:backend
            docker run -e DB_DSN=${{ secrets.DB_DSN }} -d ${{ secrets.ECR_REPOSITORY_URI }}:backend
          EOF