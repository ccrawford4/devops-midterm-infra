name: Nightly Build

on:
  push:
    branches: [main]

jobs:
  deploy:
    name: Deploy to QA
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Infra Repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'
        
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install boto3 paramiko requests
  
      - name: Launch EC2 instance and run tests
        id: ec2-deploy
        run: |
          python smoke_test.py
        env:
          EC2_SSH_KEY: ${{ secrets.EC2_PEM }}
          LAUNCH_TEMPLATE_ID: ${{ secrets.LAUNCH_TEMPLATE_ID }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          EC2_USER: ${{ secrets.EC2_USER }}
          HEALTH_CHECK_URL: ${{ secrets.HEALTH_CHECK_URL }}

      - name: Checkout Source Repo
        uses: actions/checkout@v4
        with:
          repository: ccrawford4/devops-midterm-source
          fetch-tags: true
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ secrets.AWS_REGION }}
      
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push Docker images to Amazon ECR
        run: |
          for service in frontend backend; do
            cd $service
            docker build -t $service .
            docker tag $service ${{ secrets.ECR_REPOSITORY_URI }}:$service
            docker push ${{ secrets.ECR_REPOSITORY_URI }}:$service
            cd ..
          done
      
      - name: Checkout Infra Repo
        uses: actions/checkout@v4

      - name: Deploy to QA
        run: |
          chmod +x ./run.sh
          ./run.sh "${{ secrets.EC2_PEM }}" \
                  "${{ secrets.EC2_USER }}" \
                  "${{ secrets.EC2_HOST }}" \
                  "${{ secrets.AWS_ACCESS_KEY_ID }}" \
                  "${{ secrets.AWS_SECRET_ACCESS_KEY }}" \
                  "${{ secrets.AWS_SESSION_TOKEN }}" \
                  "${{ secrets.AWS_REGION }}" \
                  "${{ secrets.ECR_REPOSITORY_URI }}" \
                  "${{ secrets.API_URL }}" \
                  "${{ secrets.DB_DSN }}" \